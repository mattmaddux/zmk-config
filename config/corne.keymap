/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 
#define THUMBS_L 36 37 38
#define THUMBS_R 39 40 41

/ {
        behaviors {
            hml: home_row_mod_left {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "balanced";
                require-prior-idle-ms = <150>;
                tapping-term-ms = <280>;
                quick-tap-ms = <175>;
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = < KEYS_R THUMBS_R >;
                hold-trigger-on-release;
            };
            hmr: home_row_mod_right {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "balanced";
                require-prior-idle-ms = <150>;
                tapping-term-ms = <280>;
                quick-tap-ms = <175>;
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = < KEYS_L THUMBS_L >;
                hold-trigger-on-release;
            };
            spshft: space_shift {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "balanced";
                require-prior-idle-ms = <150>;
                tapping-term-ms = <280>;
                quick-tap-ms = <175>;
                bindings = <&mo>, <&kp>;
                hold-trigger-key-positions = < KEYS_R THUMBS_R >;
                hold-trigger-on-release;
            };

        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
                        bindings = <
   &kp ESC   &kp Q         &kp W        &kp E        &kp R        &kp T    &kp Y            &kp U         &kp I        &kp O         &kp P            &kp BSPC
   &kp TAB   &hml LSHFT A  &hml LALT S  &hml LGUI D  &hml LCTRL F &kp G    &kp H            &hmr RCTRL J  &hmr RGUI K  &hmr RALT L   &hmr RSHFT SEMI  &kp ENTER
   &kp LSHFT &kp Z         &kp X        &kp C        &kp V        &kp B    &kp N            &kp M         &kp COMMA    &kp DOT       &kp FSLH         &kp RSHIFT
                                        &trans       &trans       &mo 1    &spshft 2 SPACE  &trans        &trans
                        >;
                };

                char_layer {
// -----------------------------------------------------------------------------------------
                        bindings = <
   &kp TILDE  &kp PRCNT        &kp AT           &kp EXCL         &kp AMPS         &kp PLUS       &kp LBRC  &kp LBKT         &kp RBKT      &kp RBRC         &kp PG_UP         &trans
   &kp BSLH   &hmr LSHFT HASH  &hmr LALT GRAVE  &hmr LGUI APOS   &hmr LCTRL DQT   &kp KP_MINUS   &kp LEFT  &hmr RCTRL DOWN  &hmr RGUI UP  &hmr RALT RIGHT  &hmr RSHFT PG_DN  &trans
   &kp LSHFT  &kp CARET        &kp DLLR         &kp ASTRK        &kp UNDER        &kp EQUAL      &kp LT    &kp LPAR         &kp RPAR      &kp GT           &kp PIPE          &trans
                                                &trans           &trans           &trans         &mt LA(SPACE) LG(SPACE)     &trans           &trans
                        >;
                };

                numpad_layer {
// -----------------------------------------------------------------------------------------
                        bindings = <
   &to 3   &trans  &kp K_PREV  &kp K_PP  &kp K_NEXT  &kp K_VOL_UP     &kp LC(TAB)  &kp N7  &kp N8  &kp N9  &trans  &trans
   &trans  &trans  &trans      &trans    &trans      &kp K_VOL_DN     &trans  &kp N4  &kp N5  &kp N6  &trans  &trans
   &trans  &trans  &trans      &trans    &trans      &trans           &kp N0  &kp N1  &kp N2  &kp N3  &trans  &trans
                               &trans    &trans      &trans           &trans  &trans  &trans
                        >;
                };
                gaming_layer {
// -----------------------------------------------------------------------------------------
                        bindings = <
   &kp ESC   &kp Q  &kp W  &kp E   &kp R   &kp T       &kp Y  &kp U   &kp I      &kp O    &kp P     &kp BSPC
   &kp TAB   &kp A  &kp S  &kp D   &kp F   &kp G       &kp H  &kp J   &kp K      &kp L    &kp SEMI  &kp ENTER
   &kp LSHFT &kp Z  &kp X  &kp C   &kp V   &kp B       &kp N  &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RSHIFT
                           &trans  &trans  &kp SPACE   &to 0  &trans  &trans
                        >;
                };
        };
};
