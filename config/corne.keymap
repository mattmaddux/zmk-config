/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 
#define THUMBS_L 36 37 38
#define THUMBS_R 39 40 41

/ {
        behaviors {
            hml: home_row_mod_left {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "balanced";
                require-prior-idle-ms = <150>;
                tapping-term-ms = <280>;
                quick-tap-ms = <175>;
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = < KEYS_R THUMBS_R >;
                hold-trigger-on-release;
            };
            hmr: home_row_mod_right {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "balanced";
                require-prior-idle-ms = <150>;
                tapping-term-ms = <280>;
                quick-tap-ms = <175>;
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = < KEYS_L THUMBS_L >;
                hold-trigger-on-release;
            };
        };
        keymap {
                compatible = "zmk,keymap";

/*                 default_layer { */
/* // ----------------------------------------------------------------------------------------- */
/*                         bindings = < */
/*    &kp ESC   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC */
/*    &kp TAB   &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp ENTER */
/*    &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHIFT */
/*                   &kp LGUI &mo 1 &kp LCTRL   &kp SPACE &mo 2 &kp RALT */
/*                         >; */
/*                 }; */
                default_layer {
// -----------------------------------------------------------------------------------------
                        bindings = <
   &kp ESC   &kp Q         &kp W        &kp E        &kp R        &kp T    &kp Y     &kp U         &kp I        &kp O         &kp P            &kp BSPC
   &kp TAB   &hml LSHFT A  &hml LALT S  &hml LGUI D  &hml LCTRL F &kp G    &kp H     &hmr RCTRL J  &hmr RGUI K  &hmr RALT L   &hmr RSHFT SEMI  &kp ENTER
   &kp LSHFT &kp Z         &kp X        &kp C        &kp V        &kp B    &kp N     &kp M         &kp COMMA    &kp DOT       &kp FSLH         &kp RSHIFT
                                        &trans       &trans       &mo 1    &kp SPACE &trans        &trans
                        >;
                };

/*                 lower_layer { */
/* // ----------------------------------------------------------------------------------------- */
/*                         bindings = < */
/*    &kp TILDE  &kp PRCNT  &kp AT     &kp EXCL   &kp AMPS   &kp PLUS       &kp LBRC  &kp LBKT  &kp RBKT  &kp RBRC   &kp PG_UP  &trans */
/*    &kp BSLH   &kp HASH   &kp GRAVE  &kp APOS   &kp DQT    &kp KP_MINUS   &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &kp PG_DN  &trans */
/*    &kp LSHFT  &kp CARET  &kp DLLR   &kp ASTRK  &kp UNDER  &kp EQUAL      &kp LT    &kp LPAR  &kp RPAR  &kp GT     &kp PIPE   &trans */
/*                                     &trans     &trans     &trans         &mo 3  &trans   &trans */
/*                         >; */
/*                 }; */
                lower_layer {
// -----------------------------------------------------------------------------------------
                        bindings = <
   &kp TILDE  &kp PRCNT  &kp AT     &kp EXCL   &kp AMPS   &kp PLUS       &kp LBRC  &kp LBKT  &kp RBKT  &kp RBRC   &kp PG_UP  &trans
   &kp BSLH   &kp HASH   &kp GRAVE  &kp APOS   &kp DQT    &kp KP_MINUS   &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &kp PG_DN  &trans
   &kp LSHFT  &kp CARET  &kp DLLR   &kp ASTRK  &kp UNDER  &kp EQUAL      &kp LT    &kp LPAR  &kp RPAR  &kp GT     &kp PIPE   &trans
                                    &trans     &trans     &trans         &mo 3  &trans   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
                        bindings = <
   &trans  &trans  &kp LG(N7)  &kp LG(N8)  &kp LG(N9)  &trans        &trans  &kp N7  &kp N8  &kp N9  &trans  &trans
   &trans  &trans  &kp LG(N4)  &kp LG(N5)  &kp LG(N6)  &kp LG(TAB)   &trans  &kp N4  &kp N5  &kp N6  &trans  &trans
   &trans  &trans  &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &trans        &kp N0  &kp N1  &kp N2  &kp N3  &trans  &trans
                                    &trans     &trans     &trans         &trans  &trans   &trans
                        >;
                };
        };
};
